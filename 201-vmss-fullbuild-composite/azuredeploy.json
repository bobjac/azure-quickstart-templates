{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password used when provisioning virtual machines"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East Asia",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "windowsOSVersion": {
	    "type": "string",
	    "defaultValue": "2012-R2-Datacenter",
	    "allowedValues": [
		"2008-R2-SP1",
		"2012-Datacenter",
		"2012-R2-Datacenter"
	    ],
	    "metadata": {
		"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
	    }
	},
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vmssCompVirtNet",
      "metadata": {
        "description": "The arbitrary name of the virtual network provisioned for the Redis cluster"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The network address space for the virtual network"
      }
    },
    "frontEndSubnetName": {
      "type": "string",
      "defaultValue": "frontEndSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "frontEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "busSvcSubnetName": {
      "type": "string",
      "defaultValue": "busSvcSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "busSvcSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "rulesSubnetName": {
      "type": "string",
      "defaultValue": "rulesSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "rulesSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "domainSubnetName": {
      "type": "string",
      "defaultValue": "domainSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "domainSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "cachingSubnetName": {
      "type": "string",
      "defaultValue": "cachingSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "cachingSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.4.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "ictSubnetName": {
      "type": "string",
      "defaultValue": "ictSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "ictSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.5.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "sqlSubnetName": {
      "type": "string",
      "defaultValue": "sqlSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "sqlSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.6.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "nodeAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.1",
      "metadata": {
        "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
      }
    },
    "jumpbox": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "The flag allowing to enable or disable provisioning of the jumpbox VM that can be used to access the Redis nodes"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Small",
      "allowedValues": [
        "Small",
        "Medium",
        "Large"
      ],
      "metadata": {
        "description": "T-shirt size of the Redis deployment"
      }
    },
    "redisVersion": {
      "type": "string",
      "defaultValue": "stable",
      "metadata": {
        "description": "The version of the Redis package to be deployed on the cluster (or use 'stable' to pull in the latest and greatest)"
      }
    },
    "redisClusterName": {
      "type": "string",
      "defaultValue": "redis-cluster",
      "metadata": {
        "description": "The arbitrary name of the Redis cluster"
      }
    }
  },
  "variables": {
    "_comment0": "/* T-shirt sizes may vary for different reasons, and some customers may want to modify these - so feel free to go ahead and define your favorite t-shirts */",
    "tshirtSizeSmall": {
      "vmSizeMember": "Standard_A1",
      "numberOfMasters": 3,
      "numberOfSlaves": 0,
      "totalMemberCount": 3,
      "totalMemberCountExcludingLast": 2,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'node-resources.json')]"
    },
    "tshirtSizeMedium": {
      "vmSizeMember": "Standard_A2",
      "numberOfMasters": 3,
      "numberOfSlaves": 3,
      "totalMemberCount": 6,
      "totalMemberCountExcludingLast": 5,
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'node-resources.json')]"
    },
    "tshirtSizeLarge": {
      "vmSizeMember": "Standard_A5",
      "numberOfMasters": 3,
      "numberOfSlaves": 6,
      "totalMemberCount": 9,
      "totalMemberCountExcludingLast": 8,
      "arbiter": "Enabled",
      "vmTemplate": "[concat(variables('templateBaseUrl'), 'node-resources.json')]"
    },
    "osFamilyUbuntu": {
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "imageSKU": "14.04.2-LTS"
    },
    "apiVersion":"2015-06-15",
    "vmStorageAccountContainerName": "vhd-redis",
    "vmStorageAccountDomain": ".blob.core.windows.net",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "scriptUrl": "https://raw.githubusercontent.com/bobjac/azure-quickstart-templates/master/201-vmss-fullbuild-composite/",
    "templateBaseUrl": "[variables('scriptUrl')]",
    "jumpboxTemplateEnabled": "jumpbox-resources.json",
    "jumpboxTemplateDisabled": "empty-resources.json",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
    "frontEndSpaTemplateUrl": "[concat(variables('templateBaseUrl'), 'vmss.json')]",
    "jumpboxTemplateUrl": "[concat(variables('templateBaseUrl'), variables(concat('jumpboxTemplate', parameters('jumpbox'))))]",
    "commonSettings": {
      "availabilitySetName": "redisAvailSet",
      "location": "[parameters('location')]"
    },
    "storageSettings": {
      "vhdStorageAccountName": "[parameters('storageAccountName')]",
      "vhdContainerName": "[variables('vmStorageAccountContainerName')]",
      "destinationVhdsContainer": "[concat('https://', parameters('storageAccountName'), variables('vmStorageAccountDomain'), '/', variables('vmStorageAccountContainerName'), '/')]"
    },
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "addressPrefix": "[parameters('addressPrefix')]",
      "frontEndSubnetName": "[parameters('frontEndSubnetName')]",
      "frontEndSubnetPrefix": "[parameters('frontEndSubnetPrefix')]",
      "busSvcSubnetName": "[parameters('busSvcSubnetName')]",
      "busSvcSubnetPrefix": "[parameters('busSvcSubnetPrefix')]",
      "rulesSubnetName": "[parameters('rulesSubnetName')]",
      "rulesSubnetPrefix": "[parameters('rulesSubnetPrefix')]",
      "domainSubnetName": "[parameters('domainSubnetName')]",
      "domainSubnetPrefix": "[parameters('domainSubnetPrefix')]",
      "cachingSubnetName": "[parameters('cachingSubnetName')]",
      "cachingSubnetPrefix": "[parameters('cachingSubnetPrefix')]",
      "ictSubnetName": "[parameters('ictSubnetName')]",
      "ictSubnetPrefix": "[parameters('ictSubnetPrefix')]",
      "sqlSubnetName": "[parameters('sqlSubnetName')]",
      "sqlSubnetPrefix": "[parameters('sqlSubnetPrefix')]",
      "frontEndSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('frontEndSubnetName'))]",
      "busSvcSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('busSvcSubnetName'))]",
      "rulesSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('rulesSubnetName'))]",
      "domainSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('domainSubnetName'))]",
      "cachingSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('cachingSubnetName'))]",
      "ictSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('ictSubnetName'))]",
      "sqlSubnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('sqlSubnetName'))]",
      "machineIpPrefix": "[parameters('nodeAddressPrefix')]"
    },
    "machineSettings": {
      "adminUsername": "[parameters('adminUsername')]",
      "machineNamePrefix": "redisnode-",
      "osImageReference": {
        "publisher": "[variables('osFamilyUbuntu').imagePublisher]",
        "offer": "[variables('osFamilyUbuntu').imageOffer]",
        "sku": "[variables('osFamilyUbuntu').imageSKU]",
        "version": "latest"
      }
    },
    "clusterSpec": "[variables(concat('tshirtSize', parameters('tshirtSize')))]",
    "installCommand": "[concat('redis-cluster-install.sh -n ', parameters('redisClusterName'), ' -v ', parameters('redisVersion'), ' -c ', variables('clusterSpec').totalMemberCount, ' -m ', variables('clusterSpec').numberOfMasters, ' -s ', variables('clusterSpec').numberOfSlaves, ' -p ', variables('networkSettings').machineIpPrefix)]",
    "vmScripts": {
      "scriptsToDownload": [
        "[concat(variables('scriptUrl'), 'redis-cluster-install.sh')]",
        "[concat(variables('scriptUrl'), 'redis-cluster-setup.sh')]",
        "[concat(variables('scriptUrl'), 'redis-sentinel-startup.sh')]"
      ],
      "installCommand": "[concat('bash ', variables('installCommand'))]",
      "setupCommand": "[concat('bash ', variables('installCommand'), ' -l')]"
    }
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "storageSettings": {
            "value": "[variables('storageSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "name": "spaFrontEnd",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('frontEndSpaTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceLocation": {
            "value": "[parameters('location')]"
          },
          "vmSku": {
            "value": "[variables('tshirtSizeSmall').vmSizeMember]"
          },
          "windowsOSVersion": {
            "value": "[parameters('windowsOSVersion')]"
          },
          "vmssName": {
              "value": "spaFrontEnd"
          },
          "instanceCount": {
              "value": 3
          },
          "adminUsername": {
              "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
              "value": "[parameters('adminPassword')]"
          },
          "vmssVnet": {
              "value": "[variables('networkSettings').virtualNetworkName]"
          }
        }
      }
    }
  ],
  "outputs": {
    "installCommand": {
      "value": "[variables('vmScripts').installCommand]",
      "type": "string"
    },
    "setupCommand": {
      "value": "[variables('vmScripts').setupCommand]",
      "type": "string"
    }
  }
}
